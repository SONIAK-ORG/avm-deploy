trigger:
- main # Triggers on changes to the `main` branch

variables:
  TF_WORKING_DIR: './' # Terraform files are in the root of the repository

pool:
  vmImage: 'ubuntu-latest'

steps:
# Step 1: Install Terraform (latest version managed by Terraform task)
- task: TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'
  displayName: Install Terraform

# Step 2: Azure Login using Service Principal
- script: |
    export ARM_CLIENT_ID="00000000-0000-0000-0000-000000000000"
    export ARM_CLIENT_SECRET="00000000-0000-0000-0000-000000000000"
    export ARM_SUBSCRIPTION_ID="00000000-0000-0000-0000-000000000000"
    export ARM_TENANT_ID="00000000-0000-0000-0000-000000000000"
    az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
    az account set --subscription $ARM_SUBSCRIPTION_ID
  displayName: Azure Login Using Service Principal

# Step 3: Terraform Init Without Backend Configuration
- script: |
    terraform init
  workingDirectory: $(TF_WORKING_DIR)
  displayName: Terraform Init (Local State)

# Step 4: Terraform Validate
- script: |
    terraform validate
  workingDirectory: $(TF_WORKING_DIR)
  displayName: Terraform Validate

# Step 5: Terraform Plan
- script: |
    terraform plan -out=tfplan
  workingDirectory: $(TF_WORKING_DIR)
  displayName: Terraform Plan

# Step 6: Terraform Apply (with Debugging)
- script: |
    terraform apply -auto-approve tfplan
  workingDirectory: $(TF_WORKING_DIR)
  env:
    TF_LOG: DEBUG
  displayName: Terraform Apply (Debug)

