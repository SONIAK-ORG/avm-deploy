trigger:
  none 

pr:
  none 

parameters:
  - name: module
    displayName: 'Which Terraform Module to Deploy?'
    type: string
    values:
      - avm-ptn-alz
      - avm-ptn-alz-management
      - avm-ptn-networking
    default: avm-ptn-alz

variables:
  - group: amz-deploy  # Variable group for shared credentials

jobs:
- deployment: deployTerraform
  displayName: 'Deploy Terraform'
  pool:
    vmImage: 'ubuntu-latest' 
  
  environment: Deploy

  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self  

        - task: AzureCLI@2
          displayName: 'Log in to Azure'
          inputs:
            azureSubscription: 'ADO'  # This should refer to the service connection configured in Azure DevOps
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              echo "Logging into Azure..."
              az account set --subscription $(azureSubscription)  # Ensure the correct subscription is selected
              az account show  # Ensure we're logged in and using the correct account
              
        - task: TerraformInstaller@0
          displayName: 'Set up Terraform'
          inputs:
            terraformVersion: '1.9.2' 

        - task: AzureCLI@2
          displayName: 'Navigate to Module Directory'          
          inputs:
            azureSubscription: 'ADO'  
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              echo "Selected module: ${{ parameters.module }}"
              echo "Current directory: $(pwd)"
              ls -al
              echo "Navigating to deployments/${{ parameters.module }}"
              cd deployments/${{ parameters.module }}
              echo "Directory contents after navigation:"
              ls -al


        - task: AzureCLI@2
          displayName: 'Terraform Init'
          inputs:
            azureSubscription: 'ADO'  
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              cd deployments/${{ parameters.module }}
              terraform init


        - task: AzureCLI@2
          displayName: 'Terraform Plan'
          inputs:
            azureSubscription: 'ADO'  
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              cd deployments/${{ parameters.module }}
              terraform plan


        - task: AzureCLI@2
          displayName: 'Terraform Apply'
          inputs:
            azureSubscription: 'ADO'  
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              cd deployments/${{ parameters.module }}
              terraform apply -auto-approve

